name: Build Code

on:
  push:
  pull_request:

jobs:
  test:
    name: "Test"

    strategy:
      matrix:
        platform: [
          ubuntu-latest,
          macos-latest,
        ]

    runs-on: ${{ matrix.platform }}
    timeout-minutes: 15

    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v1

     # install QEMU
    - name: Install QEMU (Linux)
      run: sudo apt update && sudo apt install make docker
      if: runner.os == 'Linux'
    - name: Install QEMU (macOS)
      run: brew install make docker
      if: runner.os == 'macOS'
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1

    - name: Install Rustup
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly
        echo ::add-path::$HOME/.cargo/bin
      if: runner.os == 'macOS'

    - name: "Print Rust Version"
      run: |
        rustc -Vv
        cargo -Vv
    - name: "Install Rustup Components"
      run: rustup component add rust-src
    - name: "Install cargo-xbuild"
      run: cargo install cargo-xbuild --debug

     # install QEMU
    - name: Install QEMU (Linux)
      run: sudo apt update && sudo apt install qemu-system-x86
      if: runner.os == 'Linux'
    - name: Install QEMU (macOS)
      run: brew install qemu
      if: runner.os == 'macOS'
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1
    - name: "Print QEMU Version"
      run: qemu-system-i386 --version

    - name: "Build docker image"
      run: make image

    - name: "Run test"
      run: make docker_test

  # check_formatting:
  #   name: "Check Formatting"
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 2
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: "Use the latest Rust nightly with rustfmt"
  #     uses: actions-rs/toolchain@v1
  #     with:
  #         toolchain: nightly
  #         profile: minimal
  #         components: rustfmt
  #         override: true
  #   - run: cargo fmt -- --check
  #
